I"Î≈
<h1 id="predicting-employee-attrition-with-gradient-boosting">Predicting Employee Attrition with Gradient Boosting</h1>

<h1 id="import-packages-and-files">Import Packages and Files</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="nn">scipy.stats</span> <span class="k">as</span> <span class="n">st</span>
<span class="kn">import</span> <span class="nn">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">pearsonr</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="p">.</span><span class="n">simplefilter</span><span class="p">(</span><span class="s">'ignore'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">__version__</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">__version__</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:\Users\Firdha\AppData\Roaming\Python\Python37\site-packages\pandas\compat\_optional.py:138: UserWarning: Pandas requires version '2.7.0' or newer of 'numexpr' (version '2.6.8' currently installed).
  warnings.warn(msg, UserWarning)


1.19.2
1.3.1
</code></pre></div></div>

<h2 id="load-file">Load File</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># copy path dari dataset di drive masing-masing
</span><span class="n">raw</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'Employee Attrition.csv'</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="data-pre-processing">Data Pre-Processing</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Age</th>
      <th>Attrition</th>
      <th>BusinessTravel</th>
      <th>DailyRate</th>
      <th>Department</th>
      <th>DistanceFromHome</th>
      <th>Education</th>
      <th>EducationField</th>
      <th>EmployeeCount</th>
      <th>EmployeeNumber</th>
      <th>...</th>
      <th>RelationshipSatisfaction</th>
      <th>StandardHours</th>
      <th>StockOptionLevel</th>
      <th>TotalWorkingYears</th>
      <th>TrainingTimesLastYear</th>
      <th>WorkLifeBalance</th>
      <th>YearsAtCompany</th>
      <th>YearsInCurrentRole</th>
      <th>YearsSinceLastPromotion</th>
      <th>YearsWithCurrManager</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>41</td>
      <td>Yes</td>
      <td>Travel_Rarely</td>
      <td>1102</td>
      <td>Sales</td>
      <td>1</td>
      <td>2</td>
      <td>Life Sciences</td>
      <td>1</td>
      <td>1</td>
      <td>...</td>
      <td>1</td>
      <td>80</td>
      <td>0</td>
      <td>8</td>
      <td>0</td>
      <td>1</td>
      <td>6</td>
      <td>4</td>
      <td>0</td>
      <td>5</td>
    </tr>
    <tr>
      <th>1</th>
      <td>49</td>
      <td>No</td>
      <td>Travel_Frequently</td>
      <td>279</td>
      <td>Research &amp; Development</td>
      <td>8</td>
      <td>1</td>
      <td>Life Sciences</td>
      <td>1</td>
      <td>2</td>
      <td>...</td>
      <td>4</td>
      <td>80</td>
      <td>1</td>
      <td>10</td>
      <td>3</td>
      <td>3</td>
      <td>10</td>
      <td>7</td>
      <td>1</td>
      <td>7</td>
    </tr>
    <tr>
      <th>2</th>
      <td>37</td>
      <td>Yes</td>
      <td>Travel_Rarely</td>
      <td>1373</td>
      <td>Research &amp; Development</td>
      <td>2</td>
      <td>2</td>
      <td>Other</td>
      <td>1</td>
      <td>4</td>
      <td>...</td>
      <td>2</td>
      <td>80</td>
      <td>0</td>
      <td>7</td>
      <td>3</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>33</td>
      <td>No</td>
      <td>Travel_Frequently</td>
      <td>1392</td>
      <td>Research &amp; Development</td>
      <td>3</td>
      <td>4</td>
      <td>Life Sciences</td>
      <td>1</td>
      <td>5</td>
      <td>...</td>
      <td>3</td>
      <td>80</td>
      <td>0</td>
      <td>8</td>
      <td>3</td>
      <td>3</td>
      <td>8</td>
      <td>7</td>
      <td>3</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>27</td>
      <td>No</td>
      <td>Travel_Rarely</td>
      <td>591</td>
      <td>Research &amp; Development</td>
      <td>2</td>
      <td>1</td>
      <td>Medical</td>
      <td>1</td>
      <td>7</td>
      <td>...</td>
      <td>4</td>
      <td>80</td>
      <td>1</td>
      <td>6</td>
      <td>3</td>
      <td>3</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
<p>5 rows √ó 35 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw</span><span class="p">.</span><span class="n">duplicated</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
</code></pre></div></div>

<p>This dataset consists of 35 columns and 1,470 rows. No <em>missing value</em> and <em>duplicate</em> data in this dataset.</p>

<p>There are 2 datatypes, <em>integer</em> and <em>object</em>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">categorical_features</span> <span class="o">=</span> <span class="n">raw</span><span class="p">.</span><span class="n">select_dtypes</span><span class="p">(</span><span class="n">include</span><span class="o">=</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="nb">object</span><span class="p">]).</span><span class="n">columns</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Total categorical features: </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">categorical_features</span><span class="p">)</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="n">numerical_features</span> <span class="o">=</span> <span class="n">raw</span><span class="p">.</span><span class="n">select_dtypes</span><span class="p">(</span><span class="n">include</span><span class="o">=</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">int64</span><span class="p">]).</span><span class="n">columns</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Total numerical features: </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">numerical_features</span><span class="p">)</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Total categorical features: 9
Total numerical features: 26
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">overview</span> <span class="o">=</span> <span class="p">[[</span><span class="n">column</span><span class="p">,</span> <span class="n">raw</span><span class="p">[</span><span class="n">column</span><span class="p">].</span><span class="n">dtypes</span><span class="p">,</span> <span class="n">raw</span><span class="p">[</span><span class="n">column</span><span class="p">].</span><span class="n">nunique</span><span class="p">(),</span> <span class="n">raw</span><span class="p">[</span><span class="n">column</span><span class="p">].</span><span class="n">unique</span><span class="p">()]</span> <span class="k">for</span> <span class="n">column</span> <span class="ow">in</span> <span class="n">raw</span><span class="p">.</span><span class="n">columns</span><span class="p">]</span>
<span class="n">overview</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">overview</span><span class="p">,</span> <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Column'</span><span class="p">,</span> <span class="s">'Data Type'</span><span class="p">,</span> <span class="s">'Num of Unique Values'</span><span class="p">,</span> <span class="s">'Values'</span><span class="p">])</span>
<span class="n">overview</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Column</th>
      <th>Data Type</th>
      <th>Num of Unique Values</th>
      <th>Values</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Age</td>
      <td>int64</td>
      <td>43</td>
      <td>[41, 49, 37, 33, 27, 32, 59, 30, 38, 36, 35, 2...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Attrition</td>
      <td>object</td>
      <td>2</td>
      <td>[Yes, No]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>BusinessTravel</td>
      <td>object</td>
      <td>3</td>
      <td>[Travel_Rarely, Travel_Frequently, Non-Travel]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>DailyRate</td>
      <td>int64</td>
      <td>886</td>
      <td>[1102, 279, 1373, 1392, 591, 1005, 1324, 1358,...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Department</td>
      <td>object</td>
      <td>3</td>
      <td>[Sales, Research &amp; Development, Human Resources]</td>
    </tr>
    <tr>
      <th>5</th>
      <td>DistanceFromHome</td>
      <td>int64</td>
      <td>29</td>
      <td>[1, 8, 2, 3, 24, 23, 27, 16, 15, 26, 19, 21, 5...</td>
    </tr>
    <tr>
      <th>6</th>
      <td>Education</td>
      <td>int64</td>
      <td>5</td>
      <td>[2, 1, 4, 3, 5]</td>
    </tr>
    <tr>
      <th>7</th>
      <td>EducationField</td>
      <td>object</td>
      <td>6</td>
      <td>[Life Sciences, Other, Medical, Marketing, Tec...</td>
    </tr>
    <tr>
      <th>8</th>
      <td>EmployeeCount</td>
      <td>int64</td>
      <td>1</td>
      <td>[1]</td>
    </tr>
    <tr>
      <th>9</th>
      <td>EmployeeNumber</td>
      <td>int64</td>
      <td>1470</td>
      <td>[1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16,...</td>
    </tr>
    <tr>
      <th>10</th>
      <td>EnvironmentSatisfaction</td>
      <td>int64</td>
      <td>4</td>
      <td>[2, 3, 4, 1]</td>
    </tr>
    <tr>
      <th>11</th>
      <td>Gender</td>
      <td>object</td>
      <td>2</td>
      <td>[Female, Male]</td>
    </tr>
    <tr>
      <th>12</th>
      <td>HourlyRate</td>
      <td>int64</td>
      <td>71</td>
      <td>[94, 61, 92, 56, 40, 79, 81, 67, 44, 84, 49, 3...</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JobInvolvement</td>
      <td>int64</td>
      <td>4</td>
      <td>[3, 2, 4, 1]</td>
    </tr>
    <tr>
      <th>14</th>
      <td>JobLevel</td>
      <td>int64</td>
      <td>5</td>
      <td>[2, 1, 3, 4, 5]</td>
    </tr>
    <tr>
      <th>15</th>
      <td>JobRole</td>
      <td>object</td>
      <td>9</td>
      <td>[Sales Executive, Research Scientist, Laborato...</td>
    </tr>
    <tr>
      <th>16</th>
      <td>JobSatisfaction</td>
      <td>int64</td>
      <td>4</td>
      <td>[4, 2, 3, 1]</td>
    </tr>
    <tr>
      <th>17</th>
      <td>MaritalStatus</td>
      <td>object</td>
      <td>3</td>
      <td>[Single, Married, Divorced]</td>
    </tr>
    <tr>
      <th>18</th>
      <td>MonthlyIncome</td>
      <td>int64</td>
      <td>1349</td>
      <td>[5993, 5130, 2090, 2909, 3468, 3068, 2670, 269...</td>
    </tr>
    <tr>
      <th>19</th>
      <td>MonthlyRate</td>
      <td>int64</td>
      <td>1427</td>
      <td>[19479, 24907, 2396, 23159, 16632, 11864, 9964...</td>
    </tr>
    <tr>
      <th>20</th>
      <td>NumCompaniesWorked</td>
      <td>int64</td>
      <td>10</td>
      <td>[8, 1, 6, 9, 0, 4, 5, 2, 7, 3]</td>
    </tr>
    <tr>
      <th>21</th>
      <td>Over18</td>
      <td>object</td>
      <td>1</td>
      <td>[Y]</td>
    </tr>
    <tr>
      <th>22</th>
      <td>OverTime</td>
      <td>object</td>
      <td>2</td>
      <td>[Yes, No]</td>
    </tr>
    <tr>
      <th>23</th>
      <td>PercentSalaryHike</td>
      <td>int64</td>
      <td>15</td>
      <td>[11, 23, 15, 12, 13, 20, 22, 21, 17, 14, 16, 1...</td>
    </tr>
    <tr>
      <th>24</th>
      <td>PerformanceRating</td>
      <td>int64</td>
      <td>2</td>
      <td>[3, 4]</td>
    </tr>
    <tr>
      <th>25</th>
      <td>RelationshipSatisfaction</td>
      <td>int64</td>
      <td>4</td>
      <td>[1, 4, 2, 3]</td>
    </tr>
    <tr>
      <th>26</th>
      <td>StandardHours</td>
      <td>int64</td>
      <td>1</td>
      <td>[80]</td>
    </tr>
    <tr>
      <th>27</th>
      <td>StockOptionLevel</td>
      <td>int64</td>
      <td>4</td>
      <td>[0, 1, 3, 2]</td>
    </tr>
    <tr>
      <th>28</th>
      <td>TotalWorkingYears</td>
      <td>int64</td>
      <td>40</td>
      <td>[8, 10, 7, 6, 12, 1, 17, 5, 3, 31, 13, 0, 26, ...</td>
    </tr>
    <tr>
      <th>29</th>
      <td>TrainingTimesLastYear</td>
      <td>int64</td>
      <td>7</td>
      <td>[0, 3, 2, 5, 1, 4, 6]</td>
    </tr>
    <tr>
      <th>30</th>
      <td>WorkLifeBalance</td>
      <td>int64</td>
      <td>4</td>
      <td>[1, 3, 2, 4]</td>
    </tr>
    <tr>
      <th>31</th>
      <td>YearsAtCompany</td>
      <td>int64</td>
      <td>37</td>
      <td>[6, 10, 0, 8, 2, 7, 1, 9, 5, 4, 25, 3, 12, 14,...</td>
    </tr>
    <tr>
      <th>32</th>
      <td>YearsInCurrentRole</td>
      <td>int64</td>
      <td>19</td>
      <td>[4, 7, 0, 2, 5, 9, 8, 3, 6, 13, 1, 15, 14, 16,...</td>
    </tr>
    <tr>
      <th>33</th>
      <td>YearsSinceLastPromotion</td>
      <td>int64</td>
      <td>16</td>
      <td>[0, 1, 3, 2, 7, 4, 8, 6, 5, 15, 9, 13, 12, 10,...</td>
    </tr>
    <tr>
      <th>34</th>
      <td>YearsWithCurrManager</td>
      <td>int64</td>
      <td>18</td>
      <td>[5, 7, 0, 2, 6, 8, 3, 11, 17, 1, 4, 12, 9, 10,...</td>
    </tr>
  </tbody>
</table>
</div>

<p>The table above provides an overall overview of the values contained in each column. There are some important <strong>insights</strong>:</p>
<ul>
  <li>Some columns only have 1 unique value, i.e EmployeeCount, Over18, and StandardHours columns. These columns are not informative so they need to be <strong>take out</strong>.</li>
  <li>The EmployeeNumber column has unique value as many as the number of rows, so it can be used as an <strong>identifier</strong>.</li>
  <li>DailyRate, HourlyRate, MonthlyRate, and MonthlyIncome at a glance refer to the same thing, employee salary. The relationship between them needs to be investigated further.</li>
  <li>PerformanceRating has two unique values, 3 and 4. The scale to measure it seems unclear, but it can still be used to perceive order because 4 is greater than 3</li>
  <li>There are three columns oriented to <em>satisfaction</em>, i.e EnvironmentSatisfaction, JobSatisfaction, and RelationshipSatisfaction. The three of them might be able to merge into General Satisfaction</li>
</ul>

<h2 id="the-follow-ups">The Follow-Ups</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># make a copy of the dataset
</span><span class="n">df</span> <span class="o">=</span> <span class="n">raw</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>

<span class="c1"># remove columns with only single unique value
</span><span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'EmployeeCount'</span><span class="p">,</span><span class="s">'Over18'</span><span class="p">,</span><span class="s">'StandardHours'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># rename EmployeeNumber to id, then make it the index
</span><span class="n">df</span><span class="p">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'EmployeeNumber'</span><span class="p">:</span><span class="s">'id'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'id'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># select integer columns based on whether it is continous or categorical
</span><span class="n">df_cat</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span><span class="s">'Education'</span><span class="p">,</span><span class="s">'EnvironmentSatisfaction'</span><span class="p">,</span><span class="s">'JobInvolvement'</span><span class="p">,</span><span class="s">'JobLevel'</span><span class="p">,</span>
             <span class="s">'JobSatisfaction'</span><span class="p">,</span><span class="s">'PerformanceRating'</span><span class="p">,</span><span class="s">'RelationshipSatisfaction'</span><span class="p">,</span>
             <span class="s">'StockOptionLevel'</span><span class="p">,</span><span class="s">'WorkLifeBalance'</span><span class="p">]]</span>
<span class="n">df_cont</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">select_dtypes</span><span class="p">(</span><span class="n">include</span><span class="o">=</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">int64</span><span class="p">]).</span><span class="n">drop</span><span class="p">(</span><span class="n">df_cat</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="exploratory-data-analysis-eda">Exploratory Data Analysis (EDA)</h1>

<p>EDA has <a href="https://www.ibm.com/cloud/learn/exploratory-data-analysis">three purposes</a>:</p>
<ol>
  <li>Data Understanding</li>
  <li>Data Cleaning</li>
  <li>Multivariate Analysis</li>
</ol>

<h2 id="data-understanding">Data Understanding</h2>

<h3 id="detecting-outliers">Detecting outliers</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create box plots out of each continuous column to detect outliers visually
</span><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>

<span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">):</span>
    <span class="n">sns</span><span class="p">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">df_cont</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="n">num</span><span class="p">],</span> <span class="n">data</span><span class="o">=</span><span class="n">df_cont</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="n">num</span><span class="p">])</span>

<span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">):</span>
    <span class="n">sns</span><span class="p">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">df_cont</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="n">num</span> <span class="o">+</span> <span class="mi">5</span><span class="p">],</span> <span class="n">data</span><span class="o">=</span><span class="n">df_cont</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="n">num</span><span class="p">])</span>

<span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">sns</span><span class="p">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">df_cont</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="n">num</span> <span class="o">+</span> <span class="mi">10</span><span class="p">],</span> <span class="n">data</span><span class="o">=</span><span class="n">df_cont</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="n">num</span><span class="p">])</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">pass</span>
</code></pre></div></div>

<p><img src="output_19_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create a function to calculate proportion of outliers
</span><span class="k">def</span> <span class="nf">outliers_perc</span><span class="p">(</span><span class="n">kolom</span><span class="p">):</span>
    <span class="n">Q1</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">kolom</span><span class="p">].</span><span class="n">describe</span><span class="p">()[</span><span class="s">'25%'</span><span class="p">]</span>
    <span class="n">Q3</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">kolom</span><span class="p">].</span><span class="n">describe</span><span class="p">()[</span><span class="s">'75%'</span><span class="p">]</span>
    <span class="n">iqr</span> <span class="o">=</span> <span class="n">Q3</span><span class="o">-</span><span class="n">Q1</span>
    <span class="n">low_lim</span> <span class="o">=</span> <span class="n">Q1</span> <span class="o">-</span> <span class="n">iqr</span><span class="o">*</span><span class="mf">1.5</span>
    <span class="n">up_lim</span> <span class="o">=</span> <span class="n">Q3</span> <span class="o">+</span> <span class="n">iqr</span><span class="o">*</span><span class="mf">1.5</span>

    <span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">kolom</span><span class="p">][(</span><span class="n">df</span><span class="p">[</span><span class="n">kolom</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">low_lim</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">kolom</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">up_lim</span><span class="p">)].</span><span class="n">value_counts</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
    <span class="k">return</span> <span class="nb">round</span><span class="p">(</span><span class="n">x</span><span class="o">/</span><span class="n">df</span><span class="p">[</span><span class="n">kolom</span><span class="p">].</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">4</span><span class="p">)</span><span class="o">*</span><span class="mi">100</span>

<span class="k">print</span><span class="p">(</span><span class="s">'MonthlyIncome: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">outliers_perc</span><span class="p">(</span><span class="s">'MonthlyIncome'</span><span class="p">)))</span>
<span class="k">print</span><span class="p">(</span><span class="s">'TotalWorkingYears: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">outliers_perc</span><span class="p">(</span><span class="s">'TotalWorkingYears'</span><span class="p">)))</span>
<span class="k">print</span><span class="p">(</span><span class="s">'YearsAtCompany: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">outliers_perc</span><span class="p">(</span><span class="s">'YearsAtCompany'</span><span class="p">)))</span>
<span class="k">print</span><span class="p">(</span><span class="s">'YearsSinceLastPromotion: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">outliers_perc</span><span class="p">(</span><span class="s">'YearsSinceLastPromotion'</span><span class="p">)))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MonthlyIncome: 7.76
TotalWorkingYears: 4.29
YearsAtCompany: 7.07
YearsSinceLastPromotion: 7.28
</code></pre></div></div>

<p>Several <em>continuous</em> columns appear to have <em>outliers</em> values. Columns that appear to have many <em>outliers</em> values are:</p>
<ul>
  <li>MonthlyIncome (7,76%)</li>
  <li>TotalWorkingYears (4,29%)</li>
  <li>YearsAtCompany (7,07%)</li>
  <li>YearsSinceLastPromotion (7,28%)</li>
</ul>

<p>It is not known whether these many <em>outliers</em> will significantly reduce the model‚Äôs performance. So, in the first iteration, these columns will be preserved along with the <em>outliers</em> in them.</p>

<h3 id="testing-normality-assumption">Testing normality assumption</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># import norm from scipy to test normality
</span><span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">norm</span>

<span class="c1"># create distribution plot out of each continuous column to view normality
</span><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>

<span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">):</span>
    <span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">df_cont</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="n">num</span><span class="p">]],</span> <span class="n">hist</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">fit</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="n">num</span><span class="p">])</span>

<span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">):</span>
    <span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">df_cont</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="n">num</span> <span class="o">+</span> <span class="mi">5</span><span class="p">]],</span> <span class="n">hist</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">fit</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="n">num</span><span class="p">])</span>

<span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">df_cont</span><span class="p">.</span><span class="n">columns</span><span class="p">[</span><span class="n">num</span> <span class="o">+</span> <span class="mi">10</span><span class="p">]],</span> <span class="n">hist</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">fit</span><span class="o">=</span><span class="n">norm</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="n">num</span><span class="p">])</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">pass</span>
</code></pre></div></div>

<p><img src="output_23_0.png" alt="png" /></p>

<p>Only a few columns in dataset which approach normality visually:</p>
<ul>
  <li>Age</li>
  <li>MonthlyIncome</li>
  <li>PercentSalaryHike</li>
  <li>TotalWorkingYears</li>
  <li>YearsAtCompany</li>
</ul>

<h2 id="data-cleaning">Data Cleaning</h2>

<p><em>Target variable</em> in this dataset is Attrition, but the datatype is <em>object</em>. In order to make model, the Attrition data type needs to be converted into integer form with the notation 0 for ‚ÄúNo‚Äù and 1 for ‚ÄúYes‚Äù.</p>

<p>In addition, all columns that have a number of unique values ‚Äã‚Äãof 2 also need to be converted to 0 and 1 notation so that the modeling is not disturbed. Categorical columns with unique values ‚Äã‚Äãmore than 2 will be processed in another way to avoid the impression of <em>order</em> which is actually an intrinsic property of integers.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># filter any values from column with dual category
</span><span class="n">overview</span><span class="p">[</span><span class="n">overview</span><span class="p">[</span><span class="s">'Num of Unique Values'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Column</th>
      <th>Data Type</th>
      <th>Num of Unique Values</th>
      <th>Values</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>Attrition</td>
      <td>object</td>
      <td>2</td>
      <td>[Yes, No]</td>
    </tr>
    <tr>
      <th>11</th>
      <td>Gender</td>
      <td>object</td>
      <td>2</td>
      <td>[Female, Male]</td>
    </tr>
    <tr>
      <th>22</th>
      <td>OverTime</td>
      <td>object</td>
      <td>2</td>
      <td>[Yes, No]</td>
    </tr>
    <tr>
      <th>24</th>
      <td>PerformanceRating</td>
      <td>int64</td>
      <td>2</td>
      <td>[3, 4]</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># convert all columns with dual category to integer
</span><span class="n">df</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="s">'Yes'</span> <span class="k">else</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">'Gender'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'Gender'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="s">'Male'</span> <span class="k">else</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">'OverTime'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'OverTime'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="s">'Yes'</span> <span class="k">else</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">'PerformanceRating'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'PerformanceRating'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">4</span> <span class="k">else</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># add the recently converted columns to categorical group
</span><span class="n">df_cat</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df_cat</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s">'Gender'</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s">'OverTime'</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s">'PerformanceRating'</span><span class="p">]],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># remove duplicated PerformanceRating column (column 5)
</span><span class="n">column_numbers</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">df_cat</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])]</span>
<span class="n">column_numbers</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="n">df_cat</span> <span class="o">=</span> <span class="n">df_cat</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="n">column_numbers</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="multivariate-analysis">Multivariate Analysis</h2>

<h3 id="how-attrition-varies-across-other-variables">How Attrition varies across other variables</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xticks</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="s">'No'</span><span class="p">,</span><span class="s">'Yes'</span><span class="p">]);</span>
</code></pre></div></div>

<p><img src="output_32_0.png" alt="png" /></p>

<p>The first thing that needs to be observed is that the number of employees who experience attrition is far less than those who do not experience attrition. Given its role as a target variable, it means that this dataset has <em>class imbalance</em>.</p>

<h4 id="department-and-jobrole-x-attrition">Department and JobRole x Attrition</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create dataframe to visualize
</span><span class="n">df_dep</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>

<span class="n">dep</span> <span class="o">=</span> <span class="n">df_dep</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'Department'</span><span class="p">,</span><span class="s">'Attrition'</span><span class="p">]).</span><span class="n">agg</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'sum'</span><span class="p">})</span>
<span class="n">dep</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dep</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Department'</span><span class="p">)[</span><span class="s">'id'</span><span class="p">].</span><span class="n">transform</span><span class="p">(</span><span class="s">'sum'</span><span class="p">)</span>
<span class="n">dep</span><span class="p">[</span><span class="s">'Percentage'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="n">dep</span><span class="p">[</span><span class="s">'id'</span><span class="p">]</span> <span class="o">/</span> <span class="n">dep</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span> <span class="o">*</span> <span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="n">dep</span><span class="p">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">dep</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">dep</span><span class="p">[</span><span class="n">dep</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'No'</span><span class="p">].</span><span class="n">index</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># visualize
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="s">'Department'</span><span class="p">,</span> <span class="s">'Percentage'</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Attrition'</span><span class="p">,</span> <span class="n">ci</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">dep</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Persentase Attrition di Setiap Departemen'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_35_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_id</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>

<span class="n">role</span> <span class="o">=</span> <span class="n">df_id</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'Department'</span><span class="p">,</span><span class="s">'JobRole'</span><span class="p">,</span><span class="s">'Attrition'</span><span class="p">]).</span><span class="n">agg</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'count'</span><span class="p">})</span>
<span class="n">role</span><span class="p">[</span><span class="s">'In-Department Percentage'</span><span class="p">]</span> <span class="o">=</span> <span class="n">role</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Department'</span><span class="p">)[</span><span class="s">'id'</span><span class="p">].</span><span class="n">transform</span><span class="p">(</span><span class="s">'sum'</span><span class="p">)</span>
<span class="n">role</span><span class="p">[</span><span class="s">'In-Department Percentage'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="n">role</span><span class="p">[</span><span class="s">'id'</span><span class="p">]</span> <span class="o">/</span> <span class="n">role</span><span class="p">[</span><span class="s">'In-Department Percentage'</span><span class="p">]</span> <span class="o">*</span> <span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="n">role</span><span class="p">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">role</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">role</span><span class="p">[</span><span class="n">role</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">].</span><span class="n">index</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">role</span><span class="p">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'Count'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">role</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'In-Department Percentage'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Department</th>
      <th>JobRole</th>
      <th>Attrition</th>
      <th>Count</th>
      <th>In-Department Percentage</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Human Resources</td>
      <td>Human Resources</td>
      <td>1</td>
      <td>12</td>
      <td>19.05</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Sales</td>
      <td>Sales Executive</td>
      <td>1</td>
      <td>57</td>
      <td>12.78</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Sales</td>
      <td>Sales Representative</td>
      <td>1</td>
      <td>33</td>
      <td>7.40</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Research &amp; Development</td>
      <td>Laboratory Technician</td>
      <td>1</td>
      <td>62</td>
      <td>6.45</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Research &amp; Development</td>
      <td>Research Scientist</td>
      <td>1</td>
      <td>47</td>
      <td>4.89</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Research &amp; Development</td>
      <td>Manufacturing Director</td>
      <td>1</td>
      <td>10</td>
      <td>1.04</td>
    </tr>
    <tr>
      <th>6</th>
      <td>Research &amp; Development</td>
      <td>Healthcare Representative</td>
      <td>1</td>
      <td>9</td>
      <td>0.94</td>
    </tr>
    <tr>
      <th>7</th>
      <td>Sales</td>
      <td>Manager</td>
      <td>1</td>
      <td>2</td>
      <td>0.45</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Research &amp; Development</td>
      <td>Manager</td>
      <td>1</td>
      <td>3</td>
      <td>0.31</td>
    </tr>
    <tr>
      <th>9</th>
      <td>Research &amp; Development</td>
      <td>Research Director</td>
      <td>1</td>
      <td>2</td>
      <td>0.21</td>
    </tr>
  </tbody>
</table>
</div>

<p>There is no significant difference in the proportion of Attrition by department. However, within the scope of Job Role, the highest Attrition percentage was found in Human Resources (19.05%). However, this number seems relatively large due to the small number of team members. The Sales Department seems to have more employees than Human Resources, so the percentage in the Sales department falls and loses to the Human Resources department.</p>

<h4 id="businesstravel-x-attrition">BusinessTravel x Attrition</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create dataframe to visualize
</span><span class="n">df_bt</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">bt</span> <span class="o">=</span> <span class="n">df_bt</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'BusinessTravel'</span><span class="p">,</span><span class="s">'Attrition'</span><span class="p">]).</span><span class="n">agg</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'count'</span><span class="p">}).</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">bt</span><span class="p">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'Count'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">bt</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span> <span class="o">=</span> <span class="n">bt</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'BusinessTravel'</span><span class="p">)[</span><span class="s">'Count'</span><span class="p">].</span><span class="n">transform</span><span class="p">(</span><span class="s">'sum'</span><span class="p">)</span>
<span class="n">bt</span><span class="p">[</span><span class="s">'Percentage'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="n">bt</span><span class="p">[</span><span class="s">'Count'</span><span class="p">]</span> <span class="o">/</span> <span class="n">bt</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># visualize
</span><span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'BusinessTravel'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Percentage'</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Attrition'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">bt</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_39_0.png" alt="png" /></p>

<p>Employees with Travel_Frequently seem to have the highest proportion of Attritions.</p>

<h4 id="educationfield-x-attrition">EducationField x Attrition</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create dataframe to visualize
</span><span class="n">df_edu</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">bt</span> <span class="o">=</span> <span class="n">df_edu</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'EducationField'</span><span class="p">,</span><span class="s">'Attrition'</span><span class="p">]).</span><span class="n">agg</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'count'</span><span class="p">}).</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">bt</span><span class="p">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'Count'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">bt</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span> <span class="o">=</span> <span class="n">bt</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'EducationField'</span><span class="p">)[</span><span class="s">'Count'</span><span class="p">].</span><span class="n">transform</span><span class="p">(</span><span class="s">'sum'</span><span class="p">)</span>
<span class="n">bt</span><span class="p">[</span><span class="s">'Percentage'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="n">bt</span><span class="p">[</span><span class="s">'Count'</span><span class="p">]</span> <span class="o">/</span> <span class="n">bt</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># visualize
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'EducationField'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Percentage'</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Attrition'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">bt</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_42_0.png" alt="png" /></p>

<p>There is no <em>insightful</em> Attrition pattern based on the field of education.</p>

<h4 id="maritalstatus-x-attrition">MaritalStatus x Attrition</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create dataframe to visualize
</span><span class="n">df_mar</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">bt</span> <span class="o">=</span> <span class="n">df_mar</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'MaritalStatus'</span><span class="p">,</span><span class="s">'Attrition'</span><span class="p">]).</span><span class="n">agg</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'count'</span><span class="p">}).</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">bt</span><span class="p">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'Count'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">bt</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span> <span class="o">=</span> <span class="n">bt</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'MaritalStatus'</span><span class="p">)[</span><span class="s">'Count'</span><span class="p">].</span><span class="n">transform</span><span class="p">(</span><span class="s">'sum'</span><span class="p">)</span>
<span class="n">bt</span><span class="p">[</span><span class="s">'Percentage'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="n">bt</span><span class="p">[</span><span class="s">'Count'</span><span class="p">]</span> <span class="o">/</span> <span class="n">bt</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># visualize
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'MaritalStatus'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Percentage'</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Attrition'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">bt</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_45_0.png" alt="png" /></p>

<p><em>Single</em> employees have a higher proportion of Attrition than Divorced or Married employees.</p>

<h4 id="gender-x-attrition">Gender x Attrition</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create dataframe to visualize
</span><span class="n">df_sex</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">bt</span> <span class="o">=</span> <span class="n">df_sex</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'Gender'</span><span class="p">,</span><span class="s">'Attrition'</span><span class="p">]).</span><span class="n">agg</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'count'</span><span class="p">}).</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">bt</span><span class="p">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'id'</span><span class="p">:</span><span class="s">'Count'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">bt</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span> <span class="o">=</span> <span class="n">bt</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Gender'</span><span class="p">)[</span><span class="s">'Count'</span><span class="p">].</span><span class="n">transform</span><span class="p">(</span><span class="s">'sum'</span><span class="p">)</span>
<span class="n">bt</span><span class="p">[</span><span class="s">'Percentage'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="n">bt</span><span class="p">[</span><span class="s">'Count'</span><span class="p">]</span> <span class="o">/</span> <span class="n">bt</span><span class="p">[</span><span class="s">'total'</span><span class="p">]</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># visualize
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Gender'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Percentage'</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Attrition'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">bt</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_48_0.png" alt="png" /></p>

<p>There is no significant relationship between Gender and Attrition.</p>

<h4 id="other-variables-x-attrition">Other variables x Attrition</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># calculate pearson correlation between continuous vars with Attrition
</span><span class="n">df_cont</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">]</span>

<span class="n">att_corr</span> <span class="o">=</span> <span class="n">df_cont</span><span class="p">.</span><span class="n">corr</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'pearson'</span><span class="p">)[</span><span class="s">'Attrition'</span><span class="p">].</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">att_corr</span><span class="p">[</span><span class="s">'abs_att'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">att_corr</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">])</span>
<span class="n">top_corrcont_att</span> <span class="o">=</span> <span class="n">att_corr</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'abs_att'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">iloc</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">11</span><span class="p">].</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">top_corrcont_att</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Variables'</span><span class="p">,</span><span class="s">'Correlation with Attrition'</span><span class="p">,</span><span class="s">'Absolute Correlation with Attrition'</span><span class="p">]</span>

<span class="n">df_cont</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'Attrition'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># calculate spearman correlation between categorical vars with Attrition
</span><span class="n">att_corr</span> <span class="o">=</span> <span class="n">df_cat</span><span class="p">.</span><span class="n">corr</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'spearman'</span><span class="p">)[</span><span class="s">'Attrition'</span><span class="p">].</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">att_corr</span><span class="p">[</span><span class="s">'abs_att'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">att_corr</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">])</span>
<span class="n">top_corrcat_att</span> <span class="o">=</span> <span class="n">att_corr</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'abs_att'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">iloc</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">11</span><span class="p">].</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">top_corrcat_att</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Variables'</span><span class="p">,</span><span class="s">'Correlation with Attrition'</span><span class="p">,</span><span class="s">'Absolute Correlation with Attrition'</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">top_corr_att</span> <span class="o">=</span> <span class="n">top_corrcont_att</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">top_corrcat_att</span><span class="p">,</span> <span class="n">ignore_index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> \
               <span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'Absolute Correlation with Attrition'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span> \
               <span class="p">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># visualize relationship between other variabels and Attrition
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="s">'Variables'</span><span class="p">,</span> <span class="s">'Absolute Correlation with Attrition'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">top_corr_att</span><span class="p">[:</span><span class="mi">11</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylim</span><span class="p">(</span><span class="n">bottom</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Absolute Correlation between Attrition and Other Variables'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_53_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">top_corr_att</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Variables</th>
      <th>Correlation with Attrition</th>
      <th>Absolute Correlation with Attrition</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>OverTime</td>
      <td>0.246118</td>
      <td>0.246118</td>
    </tr>
    <tr>
      <th>1</th>
      <td>JobLevel</td>
      <td>-0.190370</td>
      <td>0.190370</td>
    </tr>
    <tr>
      <th>2</th>
      <td>StockOptionLevel</td>
      <td>-0.172296</td>
      <td>0.172296</td>
    </tr>
    <tr>
      <th>3</th>
      <td>TotalWorkingYears</td>
      <td>-0.171063</td>
      <td>0.171063</td>
    </tr>
    <tr>
      <th>4</th>
      <td>YearsInCurrentRole</td>
      <td>-0.160545</td>
      <td>0.160545</td>
    </tr>
  </tbody>
</table>
</div>

<p>The variable that has the strongest relationship with Attrition is OverTime. This relationship is positive, meaning that OverTime employees tend to experience Attrition. However other variables that have a relatively strong relationship with Attrition are actually negative.</p>

<p>In absolute terms, the relationships between these variables and Attrition are all relatively weak (&lt; 0.25).</p>

<h3 id="how-all-variables-correlate-with-one-another">How all variables correlate with one another</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># draw heatmap to view correlation among all variables
</span><span class="n">mask</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">triu</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">ones_like</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">corr</span><span class="p">()))</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">heatmap</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">corr</span><span class="p">(),</span> <span class="n">annot</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">fmt</span><span class="o">=</span><span class="s">'.1f'</span><span class="p">,</span> <span class="n">mask</span><span class="o">=</span><span class="n">mask</span><span class="p">,</span> <span class="n">cbar</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">"RdYlGn"</span><span class="p">,</span> <span class="n">vmin</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_57_0.png" alt="png" /></p>

<p>Several variables that have a strong correlation (&gt;= 0.7) were found between the candidate variables <em>features</em>. Here are the details:</p>
<ul>
  <li>TotalWorkingYears: Age, JobLevel, MonthlyIncome</li>
  <li>YearsWithCurrManager: YearsAtCompany, YearsInCurrentRole</li>
  <li>PerformanceRating: PercentSalaryHike</li>
  <li>YearsAtCompany: YearsInCurrentRole</li>
</ul>

<h1 id="feature-encoding">Feature Encoding</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># one-hot encode
</span><span class="n">bt_label</span> <span class="o">=</span> <span class="p">[</span><span class="s">'bt_'</span> <span class="o">+</span> <span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s">'BusinessTravel'</span><span class="p">].</span><span class="n">unique</span><span class="p">()]</span>
<span class="n">df</span><span class="p">[</span><span class="n">bt_label</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'BusinessTravel'</span><span class="p">],</span> <span class="n">prefix</span><span class="o">=</span><span class="s">'bt'</span><span class="p">)</span>

<span class="n">dep_label</span> <span class="o">=</span> <span class="p">[</span><span class="s">'dep_'</span> <span class="o">+</span> <span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s">'Department'</span><span class="p">].</span><span class="n">unique</span><span class="p">()]</span>
<span class="n">df</span><span class="p">[</span><span class="n">dep_label</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'Department'</span><span class="p">],</span> <span class="n">prefix</span><span class="o">=</span><span class="s">'dep'</span><span class="p">)</span>

<span class="n">edu_label</span> <span class="o">=</span> <span class="p">[</span><span class="s">'edu_'</span> <span class="o">+</span> <span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s">'EducationField'</span><span class="p">].</span><span class="n">unique</span><span class="p">()]</span>
<span class="n">df</span><span class="p">[</span><span class="n">edu_label</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'EducationField'</span><span class="p">],</span> <span class="n">prefix</span><span class="o">=</span><span class="s">'edu'</span><span class="p">)</span>

<span class="n">jobrole_label</span> <span class="o">=</span> <span class="p">[</span><span class="s">'role_'</span> <span class="o">+</span> <span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s">'JobRole'</span><span class="p">].</span><span class="n">unique</span><span class="p">()]</span>
<span class="n">df</span><span class="p">[</span><span class="n">jobrole_label</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'JobRole'</span><span class="p">],</span> <span class="n">prefix</span><span class="o">=</span><span class="s">'role'</span><span class="p">)</span>

<span class="n">marital_label</span> <span class="o">=</span> <span class="p">[</span><span class="s">'mar_'</span> <span class="o">+</span> <span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s">'MaritalStatus'</span><span class="p">].</span><span class="n">unique</span><span class="p">()]</span>
<span class="n">df</span><span class="p">[</span><span class="n">marital_label</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'MaritalStatus'</span><span class="p">],</span> <span class="n">prefix</span><span class="o">=</span><span class="s">'mar'</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="modelling">Modelling</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_model</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">select_dtypes</span><span class="p">(</span><span class="n">include</span><span class="o">=</span><span class="p">[</span><span class="s">'object'</span><span class="p">]).</span><span class="n">columns</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># scale
</span><span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">MinMaxScaler</span>

<span class="n">scaler</span> <span class="o">=</span> <span class="n">MinMaxScaler</span><span class="p">()</span>
<span class="n">scaled</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">df_model</span><span class="p">)</span>
<span class="n">df_scaled</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">scaled</span><span class="p">,</span> <span class="n">columns</span> <span class="o">=</span> <span class="n">df_model</span><span class="p">.</span><span class="n">columns</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="oversample-with-smote">Oversample with SMOTE</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">target</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">]</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'target'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Comparison between both target groups before SMOTE'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_65_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
<span class="kn">from</span> <span class="nn">imblearn.over_sampling</span> <span class="kn">import</span> <span class="n">SMOTE</span>

<span class="n">features</span> <span class="o">=</span> <span class="n">df_scaled</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'Attrition'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">df_scaled</span><span class="p">.</span><span class="n">Attrition</span>

<span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">features</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">train_size</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">x_over</span><span class="p">,</span> <span class="n">y_over</span> <span class="o">=</span> <span class="n">SMOTE</span><span class="p">().</span><span class="n">fit_resample</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>

<span class="n">y_over</span><span class="p">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.0    997
1.0    997
Name: Attrition, dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">type</span><span class="p">(</span><span class="n">y_over</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pandas.core.series.Series
</code></pre></div></div>

<h2 id="modelling-with-gradient-boosting">Modelling with Gradient Boosting</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_model</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 1470 entries, 1 to 2068
Data columns (total 50 columns):
 #   Column                          Non-Null Count  Dtype
---  ------                          --------------  -----
 0   Age                             1470 non-null   int64
 1   Attrition                       1470 non-null   int64
 2   DailyRate                       1470 non-null   int64
 3   DistanceFromHome                1470 non-null   int64
 4   Education                       1470 non-null   int64
 5   EnvironmentSatisfaction         1470 non-null   int64
 6   Gender                          1470 non-null   int64
 7   HourlyRate                      1470 non-null   int64
 8   JobInvolvement                  1470 non-null   int64
 9   JobLevel                        1470 non-null   int64
 10  JobSatisfaction                 1470 non-null   int64
 11  MonthlyIncome                   1470 non-null   int64
 12  MonthlyRate                     1470 non-null   int64
 13  NumCompaniesWorked              1470 non-null   int64
 14  OverTime                        1470 non-null   int64
 15  PercentSalaryHike               1470 non-null   int64
 16  PerformanceRating               1470 non-null   int64
 17  RelationshipSatisfaction        1470 non-null   int64
 18  StockOptionLevel                1470 non-null   int64
 19  TotalWorkingYears               1470 non-null   int64
 20  TrainingTimesLastYear           1470 non-null   int64
 21  WorkLifeBalance                 1470 non-null   int64
 22  YearsAtCompany                  1470 non-null   int64
 23  YearsInCurrentRole              1470 non-null   int64
 24  YearsSinceLastPromotion         1470 non-null   int64
 25  YearsWithCurrManager            1470 non-null   int64
 26  bt_Travel_Rarely                1470 non-null   uint8
 27  bt_Travel_Frequently            1470 non-null   uint8
 28  bt_Non-Travel                   1470 non-null   uint8
 29  dep_Sales                       1470 non-null   uint8
 30  dep_Research &amp; Development      1470 non-null   uint8
 31  dep_Human Resources             1470 non-null   uint8
 32  edu_Life Sciences               1470 non-null   uint8
 33  edu_Other                       1470 non-null   uint8
 34  edu_Medical                     1470 non-null   uint8
 35  edu_Marketing                   1470 non-null   uint8
 36  edu_Technical Degree            1470 non-null   uint8
 37  edu_Human Resources             1470 non-null   uint8
 38  role_Sales Executive            1470 non-null   uint8
 39  role_Research Scientist         1470 non-null   uint8
 40  role_Laboratory Technician      1470 non-null   uint8
 41  role_Manufacturing Director     1470 non-null   uint8
 42  role_Healthcare Representative  1470 non-null   uint8
 43  role_Manager                    1470 non-null   uint8
 44  role_Sales Representative       1470 non-null   uint8
 45  role_Research Director          1470 non-null   uint8
 46  role_Human Resources            1470 non-null   uint8
 47  mar_Single                      1470 non-null   uint8
 48  mar_Married                     1470 non-null   uint8
 49  mar_Divorced                    1470 non-null   uint8
dtypes: int64(26), uint8(24)
memory usage: 376.8 KB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X</span> <span class="o">=</span> <span class="n">df_model</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Attrition'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>   <span class="c1"># features
</span><span class="n">y</span> <span class="o">=</span> <span class="n">df_model</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">].</span><span class="n">values</span>           <span class="c1"># target
</span>
<span class="n">X</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(1470, 49)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">test_size</span> <span class="o">=</span> <span class="mf">0.3</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">imblearn</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">imblearn</span> <span class="kn">import</span> <span class="n">under_sampling</span><span class="p">,</span> <span class="n">over_sampling</span>
<span class="n">X_under</span><span class="p">,</span> <span class="n">y_under</span> <span class="o">=</span> <span class="n">under_sampling</span><span class="p">.</span><span class="n">RandomUnderSampler</span><span class="p">(</span><span class="mf">0.5</span><span class="p">).</span><span class="n">fit_resample</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
<span class="n">X_over</span><span class="p">,</span> <span class="n">y_over</span> <span class="o">=</span> <span class="n">over_sampling</span><span class="p">.</span><span class="n">RandomOverSampler</span><span class="p">(</span><span class="mf">0.5</span><span class="p">).</span><span class="n">fit_resample</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
<span class="n">X_over_SMOTE</span><span class="p">,</span> <span class="n">y_over_SMOTE</span> <span class="o">=</span> <span class="n">over_sampling</span><span class="p">.</span><span class="n">SMOTE</span><span class="p">().</span><span class="n">fit_resample</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">features</span> <span class="o">=</span> <span class="n">df_model</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'Attrition'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">df_model</span><span class="p">.</span><span class="n">Attrition</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">y</span><span class="p">).</span><span class="n">value_counts</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">y_under</span><span class="p">).</span><span class="n">value_counts</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">y_over</span><span class="p">).</span><span class="n">value_counts</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">y_over_SMOTE</span><span class="p">).</span><span class="n">value_counts</span><span class="p">())</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0    1233
1     237
dtype: int64
0    474
1    237
dtype: int64
0    1233
1     616
dtype: int64
1    1233
0    1233
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">GradientBoostingClassifier</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">models</span> <span class="o">=</span> <span class="p">{</span><span class="s">"GradientBoosting"</span>  <span class="p">:</span> <span class="n">GradientBoostingClassifier</span><span class="p">()}</span>
<span class="k">for</span> <span class="n">model_name</span><span class="p">,</span> <span class="n">clf</span> <span class="ow">in</span> <span class="n">models</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="n">clf</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_over</span><span class="p">,</span> <span class="n">y_over</span><span class="p">)</span>
    <span class="n">y_pred</span> <span class="o">=</span> <span class="n">clf</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>
    <span class="n">probs</span> <span class="o">=</span> <span class="n">clf</span><span class="p">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">X_test</span><span class="p">)[:,</span><span class="mi">1</span><span class="p">]</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Evaluate model: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">model_name</span><span class="p">))</span>

    <span class="n">fpr</span><span class="p">,</span> <span class="n">tpr</span><span class="p">,</span> <span class="n">thresholds</span> <span class="o">=</span> <span class="n">metrics</span><span class="p">.</span><span class="n">roc_curve</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">probs</span><span class="p">,</span> <span class="n">pos_label</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">auc</span> <span class="o">=</span> <span class="n">metrics</span><span class="p">.</span><span class="n">auc</span><span class="p">(</span><span class="n">fpr</span><span class="p">,</span> <span class="n">tpr</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"AUC: "</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">auc</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="s">'%'</span><span class="p">)</span>

    <span class="n">accuracy</span> <span class="o">=</span> <span class="n">metrics</span><span class="p">.</span><span class="n">accuracy_score</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"accuracy: "</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">accuracy</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="s">'%'</span><span class="p">)</span>
    
    <span class="n">precission</span> <span class="o">=</span> <span class="n">metrics</span><span class="p">.</span><span class="n">precision_score</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"precission: "</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">precission</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="s">'%'</span><span class="p">)</span>

    <span class="n">f1score</span> <span class="o">=</span> <span class="n">metrics</span><span class="p">.</span><span class="n">f1_score</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"f1score: "</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">f1score</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="s">'%'</span><span class="p">)</span>

    <span class="n">recall</span> <span class="o">=</span> <span class="n">metrics</span><span class="p">.</span><span class="n">recall_score</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"recall: "</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">recall</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="s">'%'</span><span class="p">)</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Evaluate model: GradientBoosting
AUC: 97.72%
accuracy: 95.24%
precission: 87.84%
f1score: 86.09%
recall: 84.42%
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Receiver Operating Characteristic'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fpr</span><span class="p">,</span> <span class="n">tpr</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="s">'AUC = %0.2f'</span> <span class="o">%</span> <span class="n">auc</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span> <span class="o">=</span> <span class="s">'lower right'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span><span class="s">'r--'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'True Positive Rate'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'False Positive Rate'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="output_78_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="o">=</span><span class="n">GradientBoostingClassifier</span><span class="p">()</span>
 
<span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">features</span><span class="p">,</span><span class="n">df</span><span class="p">[</span><span class="s">'Attrition'</span><span class="p">])</span>
 
<span class="n">feature_importances</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">'features'</span><span class="p">:</span><span class="n">features</span><span class="p">.</span><span class="n">columns</span><span class="p">,</span><span class="s">'feature_importance'</span><span class="p">:</span><span class="n">model</span><span class="p">.</span><span class="n">feature_importances_</span><span class="p">})</span>
<span class="k">print</span><span class="p">(</span><span class="n">feature_importances</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'feature_importance'</span><span class="p">,</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                          features  feature_importance
10                   MonthlyIncome            0.123387
13                        OverTime            0.117868
0                              Age            0.073109
18               TotalWorkingYears            0.052309
17                StockOptionLevel            0.048343
4          EnvironmentSatisfaction            0.048021
7                   JobInvolvement            0.038296
2                 DistanceFromHome            0.037761
1                        DailyRate            0.035264
8                         JobLevel            0.034536
44          role_Research Director            0.031590
9                  JobSatisfaction            0.031030
24            YearsWithCurrManager            0.029772
6                       HourlyRate            0.029322
21                  YearsAtCompany            0.028248
12              NumCompaniesWorked            0.027963
11                     MonthlyRate            0.024053
26            bt_Travel_Frequently            0.021448
23         YearsSinceLastPromotion            0.021205
20                 WorkLifeBalance            0.020034
39      role_Laboratory Technician            0.017559
16        RelationshipSatisfaction            0.013754
19           TrainingTimesLastYear            0.013507
48                    mar_Divorced            0.012659
43       role_Sales Representative            0.011132
45            role_Human Resources            0.009126
36             edu_Human Resources            0.007445
14               PercentSalaryHike            0.007376
22              YearsInCurrentRole            0.005520
33                     edu_Medical            0.005452
29      dep_Research &amp; Development            0.004433
25                bt_Travel_Rarely            0.004408
5                           Gender            0.004039
3                        Education            0.003773
34                   edu_Marketing            0.002548
31               edu_Life Sciences            0.002387
38         role_Research Scientist            0.000793
32                       edu_Other            0.000504
47                     mar_Married            0.000028
35            edu_Technical Degree            0.000000
30             dep_Human Resources            0.000000
37            role_Sales Executive            0.000000
15               PerformanceRating            0.000000
40     role_Manufacturing Director            0.000000
41  role_Healthcare Representative            0.000000
42                    role_Manager            0.000000
28                       dep_Sales            0.000000
27                   bt_Non-Travel            0.000000
46                      mar_Single            0.000000
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">feature_importances</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'bar'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_80_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">svm</span><span class="p">,</span> <span class="n">datasets</span>
<span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
<span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">plot_confusion_matrix</span>
<span class="kn">import</span> <span class="nn">itertools</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_confusion_matrix</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">):</span>
    <span class="n">n_classes</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">unique</span><span class="p">(</span><span class="n">y_true</span><span class="p">))</span>
    <span class="n">conf</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">n_classes</span><span class="p">,</span> <span class="n">n_classes</span><span class="p">))</span>
    <span class="k">for</span> <span class="n">actual</span><span class="p">,</span> <span class="n">pred</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">):</span>
        <span class="n">conf</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">actual</span><span class="p">)][</span><span class="nb">int</span><span class="p">(</span><span class="n">pred</span><span class="p">)]</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">conf</span><span class="p">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'int'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">conf</span> <span class="o">=</span> <span class="n">get_confusion_matrix</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">classes</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="c1"># plot confusion matrix
</span><span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">conf</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="s">'nearest'</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">Greens</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">"Confusion Matrix"</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">()</span>
<span class="n">tick_marks</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">classes</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">tick_marks</span><span class="p">,</span> <span class="n">classes</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">yticks</span><span class="p">(</span><span class="n">tick_marks</span><span class="p">,</span> <span class="n">classes</span><span class="p">)</span>

<span class="n">fmt</span> <span class="o">=</span> <span class="s">'d'</span>
<span class="n">thresh</span> <span class="o">=</span> <span class="n">conf</span><span class="p">.</span><span class="nb">max</span><span class="p">()</span> <span class="o">/</span> <span class="mf">2.</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">itertools</span><span class="p">.</span><span class="n">product</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="n">conf</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="nb">range</span><span class="p">(</span><span class="n">conf</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])):</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="nb">format</span><span class="p">(</span><span class="n">conf</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">],</span> <span class="n">fmt</span><span class="p">),</span>
             <span class="n">horizontalalignment</span><span class="o">=</span><span class="s">"center"</span><span class="p">,</span>
             <span class="n">color</span><span class="o">=</span><span class="s">"white"</span> <span class="k">if</span> <span class="n">conf</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">thresh</span> <span class="k">else</span> <span class="s">"black"</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'True label'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Predicted label'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 0, 'Predicted label')
</code></pre></div></div>

<p><img src="output_84_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">shap</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">explainer</span> <span class="o">=</span> <span class="n">shap</span><span class="p">.</span><span class="n">Explainer</span><span class="p">(</span><span class="n">clf</span><span class="p">)</span>
<span class="n">shap_values</span> <span class="o">=</span> <span class="n">explainer</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">shap</span><span class="p">.</span><span class="n">plots</span><span class="p">.</span><span class="n">beeswarm</span><span class="p">(</span><span class="n">shap_values</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="output_87_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
:ET